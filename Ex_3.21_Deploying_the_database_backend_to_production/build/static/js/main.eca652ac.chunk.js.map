{"version":3,"sources":["service/PersonServer.js","service/Persons.js","service/PersonForm.js","service/Filter.js","service/Nofication.js","App.js","index.js"],"names":["baseUrl","PersonServer","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Person","person","persons","setPersons","setColor","setMessage","useState","newDelete","setNewDelete","name","number","onClick","window","confirm","filter","p","catch","error","Persons","newSearch","toLowerCase","startsWith","map","PersonForm","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","existingPerson","find","returnedPerson","newPerson","concat","value","onChange","target","type","Filter","handleNewSearch","placeholder","Notification","message","color","notificationStyle","background","borderStyle","borderRadius","fontSize","padding","marginBottom","setTimeout","style","App","setNewSearch","useEffect","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eca652ac.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl ='/api/persons'\r\n\r\nconst getAll = ()=>{\r\n    const request = axios.get(baseUrl)    \r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)        \r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => axios.delete(`${baseUrl}/${id}`)\r\n\r\nconst PersonServer = { getAll, create, update, remove }\r\n\r\nexport default PersonServer","import React, { useState } from 'react'\r\nimport PersonServer from './PersonServer.js';\r\n\r\nconst Person = ({person,persons,setPersons, setColor, setMessage}) => {\r\n\r\n  const [ newDelete, setNewDelete] = useState(false);\r\n\r\n  const deleteOrNot = () =>{\r\n\r\n    // check if user confirm the delete action\r\n    if(window.confirm(`Are you sure you want to delete ${person.name}?`)){\r\n      setNewDelete(true);\r\n\r\n      PersonServer\r\n        .remove(person.id)\r\n        .then(response => {\r\n          setColor(\"red\")\r\n          setMessage(`${person.name} is deleted`)\r\n          setPersons(persons.filter(p => p.id !== person.id))\r\n        })\r\n        .catch(error => {\r\n          setColor(\"red\")\r\n          setMessage(`${person.name} ${error.response.data.error}`)\r\n          setPersons(persons.filter(p => p.id !== person.id))          \r\n        })      \r\n    }\r\n  }\r\n\r\n  if (!newDelete){\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {person.name} {person.number} \r\n          <button onClick={deleteOrNot}>delete</button>\r\n        </ul>\r\n      </div>\r\n    )\r\n  } else {\r\n    return(\r\n      <div></div>\r\n    )\r\n  }\r\n \r\n}\r\n\r\nconst Persons = ({persons, setPersons, newSearch, setMessage, setColor}) => {\r\n \r\n  return (\r\n    <div>\r\n      {persons\r\n      .filter((person) => person.name.toLowerCase().startsWith(newSearch.toLowerCase()))\r\n      .map((person) => <Person \r\n        key = {person.id} \r\n        person = {person} \r\n        persons = {persons} \r\n        setPersons={setPersons} \r\n        setColor = {setColor}\r\n        setMessage = {setMessage}\r\n      />) }             \r\n    </div> \r\n  ) \r\n\r\n}\r\n\r\nexport default Persons\r\n","import React, { useState } from 'react'\r\nimport PersonServer from './PersonServer.js'\r\n\r\nconst PersonForm = ({persons, setPersons, setColor, setMessage}) => {  \r\n  \r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newNumber, setNewNumber ] = useState('');\r\n\r\n  const handleNameChange = (event) => { setNewName(event.target.value); }\r\n  const handleNumberChange = (event) => { setNewNumber(event.target.value); }\r\n\r\n  const addName = (event) =>{\r\n    event.preventDefault();\r\n\r\n    const existingPerson = persons.find((person)=>person.name === newName)\r\n    \r\n    if (existingPerson){\r\n\r\n        // double check if the user wants to update the contact info\r\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)){\r\n            \r\n        PersonServer\r\n        .update(existingPerson.id, {\r\n          name: newName,\r\n          number: newNumber\r\n        })\r\n        .then(returnedPerson => {\r\n          // phonenumber updated, notification will be shown\r\n          setPersons(persons.map(person => person.id !== existingPerson.id ? person : returnedPerson))\r\n          setColor(\"green\")\r\n          setMessage(`Phone number has been updated for ${newName}`)          \r\n          setNewName(\"\")\r\n          setNewNumber(\"\")\r\n        })        \r\n        .catch(error => {\r\n          setPersons(persons.filter(p => p.id !== existingPerson.id))       \r\n          setColor(\"red\")          \r\n          setMessage(`${newName} ${error.response.data.error}`)  \r\n              \r\n        })\r\n        \r\n      }\r\n\r\n    }else{\r\n    \r\n      const newPerson = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n\r\n      PersonServer\r\n      .create(newPerson)\r\n      .then(returnedPerson =>{                     \r\n        setPersons(persons.concat(returnedPerson)); \r\n        setColor(\"green\");\r\n        setMessage(`Added ${newName}`);\r\n        setNewName('');\r\n        setNewNumber('');        \r\n      })\r\n      .catch(error => {\r\n        setColor(\"red\");\r\n        setMessage(error.response.data.error);\r\n      })      \r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div>  \r\n      <form onSubmit = {addName}>\r\n        <div>\r\n          name: <input value = {newName} onChange = {handleNameChange} />\r\n          <br/>\r\n          number: <input value = {newNumber} onChange = {handleNumberChange} />\r\n        </div>        \r\n        <button type=\"submit\">add</button>        \r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Filter = ({newSearch, handleNewSearch}) => {\t\r\n  \r\n  return (\r\n    <div>      \r\n      filter shown with <input value = {newSearch} onChange = {handleNewSearch} placeholder = 'search here...'/>      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","\r\n\r\nconst Notification = ({message, color, setMessage}) => {\r\n\r\n    const notificationStyle = {\r\n      color: color,\r\n      background: 'lightgrey',\r\n      borderStyle: 'solid',\r\n      borderRadius: '5px',\r\n      fontSize: 25,\r\n      padding: '10px',\r\n      marginBottom: '20px'\r\n    }\r\n    \r\n    setTimeout(() => {\r\n      setMessage();\r\n    },5000) \r\n    \r\n    if(!message){\r\n      return (<p></p>)\r\n    }else{\r\n      return (\r\n        <div style={notificationStyle}> \r\n          {message}\r\n        </div>\r\n      ) \r\n    }\r\n  }\r\n\r\n  export default Notification","import React, { useEffect, useState } from 'react'\r\nimport Persons from './service/Persons.js'\r\nimport PersonForm from './service/PersonForm.js'\r\nimport Filter from './service/Filter.js'\r\nimport Notification from './service/Nofication.js'\r\nimport PersonServer from './service/PersonServer.js'\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [ persons, setPersons ] = useState([]); \r\n  const [ newSearch, setNewSearch ] = useState(\"\");\r\n  const [ message, setMessage ] = useState(); \r\n  const [ color, setColor ] = useState(\"\");\r\n\r\n  useEffect (()=>{\r\n    PersonServer\r\n    .getAll()\r\n    .then(initialPersons => setPersons(initialPersons))\r\n  }, [])\r\n\r\n  const handleNewSearch = (event) => { setNewSearch(event.target.value) }\r\n\r\n  return (\r\n    <div>      \r\n      \r\n      <h2>Phonebook</h2> \r\n     \r\n      <Notification message ={message} color={color} setMessage={setMessage}/>\r\n\r\n      <Filter newSearch={newSearch} handleNewSearch={handleNewSearch} />\r\n      \r\n      <h3>add a new</h3>  \r\n      <PersonForm \r\n        persons = {persons} \r\n        setPersons = {setPersons}              \r\n        setMessage={setMessage}\r\n        setColor = {setColor}\r\n      />\r\n      \r\n      <h3>Numbers</h3>\r\n      <Persons \r\n        persons = {persons} \r\n        setPersons = {setPersons}  \r\n        newSearch ={newSearch}\r\n        setMessage = {setMessage}\r\n        setColor = {setColor}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js'\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root')\n)"],"sourceRoot":""}