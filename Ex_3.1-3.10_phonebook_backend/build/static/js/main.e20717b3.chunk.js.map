{"version":3,"sources":["service/PersonServer.js","service/Persons.js","service/PersonForm.js","service/Filter.js","App.js","index.js"],"names":["baseUrl","PersonServer","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Person","person","useState","newDelete","setNewDelete","name","number","onClick","window","confirm","Persons","persons","newSearch","filter","toLowerCase","startsWith","map","Notification","message","color","setMessage","notificationStyle","background","borderStyle","borderRadius","fontSize","padding","marginBottom","setTimeout","style","PersonForm","setPersons","setColor","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","existingPerson","find","returnedPerson","catch","error","newPerson","value","onChange","target","type","Filter","setNewSearch","placeholder","App","useEffect","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e20717b3.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl ='/api/persons'\r\n\r\nconst getAll = ()=>{\r\n    const request = axios.get(baseUrl)    \r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)        \r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => axios.delete(`${baseUrl}/${id}`)\r\n\r\nconst PersonServer = { getAll, create, update, remove }\r\n\r\nexport default PersonServer","import React, { useState } from 'react'\r\nimport PersonServer from './PersonServer.js';\r\n\r\nconst Person = ({person}) => {\r\n\r\n  const [ newDelete, setNewDelete] = useState(false);\r\n\r\n  const deleteOrNot = () =>{\r\n\r\n    // check if user confirm the delete action\r\n    if(window.confirm(`Are you sure you want to delete ${person.name}?`)){\r\n      setNewDelete(true);\r\n      PersonServer.remove(person.id);\r\n    }\r\n  }\r\n  \r\n  if (!newDelete){\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {person.name} {person.number} \r\n          <button onClick={deleteOrNot}>delete</button>\r\n        </ul>\r\n      </div>\r\n    )\r\n  } else {\r\n    return(\r\n      <div></div>\r\n    )\r\n  }\r\n\r\n \r\n}\r\n\r\nconst Persons = ({persons, newSearch}) => {\r\n  \r\n  return (\r\n    <div>\r\n      {persons\r\n      .filter((person) => person.name.toLowerCase().startsWith(newSearch.toLowerCase()))\r\n      .map((person) => <Person key = {person.id} person = {person} />) }             \r\n    </div> \r\n  ) \r\n}\r\n\r\nexport default Persons\r\n","import React, { useState } from 'react'\r\nimport PersonServer from './PersonServer.js'\r\n\r\nconst Notification = ({message, color, setMessage}) => {\r\n\r\n  const notificationStyle = {\r\n    color: color,\r\n    background: 'lightgrey',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    fontSize: 25,\r\n    padding: '10px',\r\n    marginBottom: '20px'\r\n  }\r\n  \r\n  setTimeout(() => {\r\n    setMessage();\r\n  },5000) \r\n  \r\n  if(!message){\r\n    return (<p></p>)\r\n  }else{\r\n    return (\r\n      <div style={notificationStyle}> \r\n        {message}\r\n      </div>\r\n    ) \r\n  }\r\n}\r\n\r\nconst PersonForm = ({persons, setPersons, setColor, setMessage}) => {  \r\n  \r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newNumber, setNewNumber ] = useState('');\r\n\r\n  const handleNameChange = (event) => { setNewName(event.target.value); }\r\n  const handleNumberChange = (event) => { setNewNumber(event.target.value); }\r\n\r\n  const addName = (event) =>{\r\n    event.preventDefault();\r\n\r\n    const existingPerson = persons.find((person)=>person.name === newName)\r\n    \r\n    if (existingPerson){\r\n\r\n        // double check if the user wants to update the contact info\r\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)){\r\n            \r\n        PersonServer\r\n        .update(existingPerson.id, {\r\n          name: newName,\r\n          number: newNumber\r\n        })\r\n        .then(returnedPerson => {\r\n          // phonenumber updated, notification will be shown\r\n          setPersons(persons.map(person => person.id !== existingPerson.id ? person : returnedPerson))\r\n          setColor(\"green\")\r\n          setMessage(`Phone number has been updated for ${newName}`)          \r\n          setNewName(\"\")\r\n          setNewNumber(\"\")\r\n        })        \r\n        .catch(error => {\r\n          setColor(\"red\")          \r\n          setMessage(`${newName} has already been removed from the server`)            \r\n        })\r\n        \r\n      }\r\n\r\n    }else{\r\n    \r\n      const newPerson = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n\r\n      PersonServer\r\n      .create(newPerson)\r\n      .then(returnedPerson =>{                     \r\n        setPersons(returnedPerson); \r\n        setColor(\"green\");\r\n        setMessage(`Added ${newName}`);\r\n        setNewName('');\r\n        setNewNumber('');        \r\n      })\r\n      .catch(error => {\r\n        setColor(\"red\");\r\n        setMessage(error.response.data.error);\r\n      })      \r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div>  \r\n      <form onSubmit = {addName}>\r\n        <div>\r\n          name: <input value = {newName} onChange = {handleNameChange} />\r\n          <br/>\r\n          number: <input value = {newNumber} onChange = {handleNumberChange} />\r\n        </div>        \r\n        <button type=\"submit\">add</button>        \r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\nexport {Notification}\r\n","import React from 'react'\r\n\r\nconst Filter = ({newSearch, setNewSearch}) => {\t\r\n\r\n  const handleNewSearch = (event) => { setNewSearch(event.target.value)}\r\n\r\n  return (\r\n    <div>      \r\n      filter shown with <input value = {newSearch} onChange = {handleNewSearch} placeholder = 'search here...'/>      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React, { useEffect, useState } from 'react'\r\nimport Persons from './service/Persons.js'\r\nimport PersonForm, { Notification } from './service/PersonForm.js'\r\nimport Filter from './service/Filter.js'\r\nimport PersonServer from './service/PersonServer.js'\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [ persons, setPersons ] = useState([]); \r\n  const [ newSearch, setNewSearch ] = useState(\"\");\r\n  const [ message, setMessage ] = useState(); \r\n  const [ color, setColor ] = useState(\"\");\r\n\r\n  useEffect (()=>{\r\n    PersonServer\r\n    .getAll()\r\n    .then(initialPersons => setPersons(initialPersons))\r\n  }, [])\r\n\r\n  \r\n  return (\r\n    <div>      \r\n      \r\n      <h2>Phonebook</h2> \r\n     \r\n      <Notification message ={message} color={color} setMessage={setMessage}/>\r\n\r\n      <Filter newSearch={newSearch} setNewSearch={setNewSearch} />\r\n      \r\n      <h3>add a new</h3>  \r\n      <PersonForm persons = {persons} setPersons = {setPersons} setColor={setColor} setMessage={setMessage}/>\r\n      \r\n      <h3>Numbers</h3>\r\n      <Persons persons = {persons} newSearch ={newSearch}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js'\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root')\n)"],"sourceRoot":""}